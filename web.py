import streamlit as st
import tensorflow as tf
import numpy as np
from PIL import Image
import requests

# Define translations
translations = {
    "English": {
        "title": "CropPro Assist",
        "welcome": "Welcome to the Plant Disease Recognition System! üåøüîç",
        "mission": "Our mission is to help in identifying plant diseases efficiently. Upload an image of a plant, and our system will analyze it to detect any signs of diseases.",
        "how_it_works": "How It Works",
        "upload_image": "Upload Image:",
        "disease_recognition": "Go to the Disease Recognition page and upload an image of a plant with suspected diseases.",
        "analysis": "Analysis:",
        "results": "Results:",
        "about": "About",
        "about_dataset": "About Dataset",
        "dataset_description": "This dataset consists of approximately 87K RGB images of healthy and diseased crop leaves, categorized into 38 different classes.",
        "training_set": "Training Set:",
        "validation_set": "Validation Set:",
        "test_set": "Test Set:",
        "graph_representation": "Graph Representation",
        "disease_recognition": "Disease Recognition",
        "upload_prompt": "Upload an image below to analyze plant disease.",
        "enter_plant_name": "Enter the first few letters of the plant name:",
        "choose_image": "Choose an Image:",
        "predict": "Predict",
        "analyzing_image": "Analyzing the image...",
        "no_classes_match": "No classes match the entered plant prefix.",
        "please_upload_image": "‚ö†Ô∏è Please upload an image to analyze.",
        "webcam_live_feed": "Webcam Live Feed",
        "take_photo": "Take a photo using your webcam to analyze plant disease.",
        "run": "Run",
        "disease_library": "Disease Library",
        "browse_library": "Browse through a comprehensive library of plant diseases",
        "select_disease": "Choose a disease",
        "precaution": "Precaution",
        "cause": "Cause",
        "symptoms": "Symptoms",
        "management": "Management",
        "contact_bot": "Contact Bot",
        "fertilizer": "Fertilizer",
        "chat_with_bot": "Chat with our assistant",
        "Agriculture news": "Agriculture news",
        "Weather": "Weather"
    },
    "Hindi": {
        "title": "CropPro Assist",
        "welcome": "‡§™‡•ç‡§≤‡§æ‡§Ç‡§ü ‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§® ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä ‡§Æ‡•á‡§Ç ‡§Ü‡§™‡§ï‡§æ ‡§∏‡•ç‡§µ‡§æ‡§ó‡§§ ‡§π‡•à! üåøüîç",
        "mission": "‡§π‡§Æ‡§æ‡§∞‡§æ ‡§Æ‡§ø‡§∂‡§® ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§∞‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡§π‡§ö‡§æ‡§® ‡§Æ‡•á‡§Ç ‡§Æ‡§¶‡§¶ ‡§ï‡§∞‡§®‡§æ ‡§π‡•à‡•§ ‡§è‡§ï ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§π‡§Æ‡§æ‡§∞‡•Ä ‡§™‡•ç‡§∞‡§£‡§æ‡§≤‡•Ä ‡§ï‡§ø‡§∏‡•Ä ‡§≠‡•Ä ‡§∞‡•ã‡§ó ‡§ï‡•á ‡§≤‡§ï‡•ç‡§∑‡§£‡•ã‡§Ç ‡§ï‡§æ ‡§™‡§§‡§æ ‡§≤‡§ó‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§á‡§∏‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡•á‡§ó‡•Ä‡•§",
        "how_it_works": "‡§Ø‡§π ‡§ï‡•à‡§∏‡•á ‡§ï‡§æ‡§Æ ‡§ï‡§∞‡§§‡§æ ‡§π‡•à",
        "upload_image": "‡§õ‡§µ‡§ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç:",
        "disease_recognition": "‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§® ‡§™‡•É‡§∑‡•ç‡§† ‡§™‡§∞ ‡§ú‡§æ‡§è‡§Ç ‡§î‡§∞ ‡§∏‡§Ç‡§¶‡§ø‡§ó‡•ç‡§ß ‡§∞‡•ã‡§ó‡•ã‡§Ç ‡§µ‡§æ‡§≤‡•á ‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§õ‡§µ‡§ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç‡•§",
        "analysis": "‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£:",
        "results": "‡§™‡§∞‡§ø‡§£‡§æ‡§Æ:",
        "about": "‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        "about_dataset": "‡§°‡•á‡§ü‡§æ‡§∏‡•á‡§ü ‡§ï‡•á ‡§¨‡§æ‡§∞‡•á ‡§Æ‡•á‡§Ç",
        "dataset_description": "‡§á‡§∏ ‡§°‡•á‡§ü‡§æ‡§∏‡•á‡§ü ‡§Æ‡•á‡§Ç ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§î‡§∞ ‡§∞‡•ã‡§ó‡§ó‡•ç‡§∞‡§∏‡•ç‡§§ ‡§´‡§∏‡§≤‡•ã‡§Ç ‡§ï‡•Ä ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•Ä ‡§≤‡§ó‡§≠‡§ó 87K RGB ‡§õ‡§µ‡§ø‡§Ø‡§æ‡§Å ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç, ‡§ú‡§ø‡§®‡•ç‡§π‡•á‡§Ç 38 ‡§µ‡§ø‡§≠‡§ø‡§®‡•ç‡§® ‡§µ‡§∞‡•ç‡§ó‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§µ‡§∞‡•ç‡§ó‡•Ä‡§ï‡•É‡§§ ‡§ï‡§ø‡§Ø‡§æ ‡§ó‡§Ø‡§æ ‡§π‡•à‡•§",
        "training_set": "‡§™‡•ç‡§∞‡§∂‡§ø‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á‡§ü:",
        "validation_set": "‡§Æ‡§æ‡§®‡•ç‡§Ø‡§§‡§æ ‡§∏‡•á‡§ü:",
        "test_set": "‡§™‡§∞‡•Ä‡§ï‡•ç‡§∑‡§£ ‡§∏‡•á‡§ü:",
        "graph_representation": "‡§ó‡•ç‡§∞‡§æ‡§´ ‡§™‡•ç‡§∞‡§§‡§ø‡§®‡§ø‡§ß‡§ø‡§§‡•ç‡§µ",
        "disease_recognition": "‡§∞‡•ã‡§ó ‡§™‡§π‡§ö‡§æ‡§®",
        "upload_prompt": "‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡•Ä‡§ö‡•á ‡§è‡§ï ‡§õ‡§µ‡§ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç‡•§",
        "enter_plant_name": "‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§®‡§æ‡§Æ ‡§ï‡•á ‡§™‡§π‡§≤‡•á ‡§ï‡•Å‡§õ ‡§Ö‡§ï‡•ç‡§∑‡§∞ ‡§¶‡§∞‡•ç‡§ú ‡§ï‡§∞‡•á‡§Ç:",
        "choose_image": "‡§è‡§ï ‡§õ‡§µ‡§ø ‡§ö‡•Å‡§®‡•á‡§Ç:",
        "predict": "‡§≠‡§µ‡§ø‡§∑‡•ç‡§Ø‡§µ‡§æ‡§£‡•Ä ‡§ï‡§∞‡•á‡§Ç",
        "analyzing_image": "‡§õ‡§µ‡§ø ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞ ‡§∞‡§π‡§æ ‡§π‡•à...",
        "no_classes_match": "‡§¶‡§∞‡•ç‡§ú ‡§ï‡§ø‡§è ‡§ó‡§è ‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§â‡§™‡§∏‡§∞‡•ç‡§ó ‡§∏‡•á ‡§ï‡•ã‡§à ‡§µ‡§∞‡•ç‡§ó ‡§Æ‡•á‡§≤ ‡§®‡§π‡•Ä‡§Ç ‡§ñ‡§æ‡§§‡§æ‡•§",
        "please_upload_image": "‚ö†Ô∏è ‡§ï‡•É‡§™‡§Ø‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§è‡§ï ‡§õ‡§µ‡§ø ‡§Ö‡§™‡§≤‡•ã‡§° ‡§ï‡§∞‡•á‡§Ç‡•§",
        "webcam_live_feed": "‡§µ‡•á‡§¨‡§ï‡•à‡§Æ ‡§≤‡§æ‡§á‡§µ ‡§´‡§º‡•Ä‡§°",
        "take_photo": "‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§∞‡•ã‡§ó ‡§ï‡§æ ‡§µ‡§ø‡§∂‡•ç‡§≤‡•á‡§∑‡§£ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§™‡§®‡•á ‡§µ‡•á‡§¨‡§ï‡•à‡§Æ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡§ï‡•á ‡§è‡§ï ‡§´‡•ã‡§ü‡•ã ‡§≤‡•á‡§Ç‡•§",
        "run": "‡§ö‡§≤‡§æ‡§è‡§Ç",
        "disease_library": "‡§∞‡•ã‡§ó ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø",
        "browse_library": "‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§∞‡•ã‡§ó‡•ã‡§Ç ‡§ï‡•á ‡§µ‡•ç‡§Ø‡§æ‡§™‡§ï ‡§™‡•Å‡§∏‡•ç‡§§‡§ï‡§æ‡§≤‡§Ø ‡§ï‡•á ‡§Æ‡§æ‡§ß‡•ç‡§Ø‡§Æ ‡§∏‡•á ‡§¨‡•ç‡§∞‡§æ‡§â‡§ú‡§º ‡§ï‡§∞‡•á‡§Ç",
        "select_disease": "‡§è‡§ï ‡§∞‡•ã‡§ó ‡§ö‡•Å‡§®‡•á‡§Ç",
        "precaution": "‡§è‡§π‡§§‡§ø‡§Ø‡§æ‡§§",
        "cause": "‡§ï‡§æ‡§∞‡§£",
        "symptoms": "‡§≤‡§ï‡•ç‡§∑‡§£",
        "management": "‡§™‡•ç‡§∞‡§¨‡§Ç‡§ß‡§®",
        "fertilizer": "‡§â‡§∞‡•ç‡§µ‡§∞‡§ï",
        "contact_bot": "‡§¨‡•â‡§ü ‡§∏‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§ï‡§∞‡•á‡§Ç",
        "chat_with_bot": "‡§π‡§Æ‡§æ‡§∞‡•á AI ‡§∏‡§π‡§æ‡§Ø‡§ï ‡§ï‡•á ‡§∏‡§æ‡§• ‡§ö‡•à‡§ü ‡§ï‡§∞‡•á‡§Ç",
        "Agriculture news": "Agriculture news",
        "Weather": "Weather"
    }
}

# Function to get user location
def fetch_weather(api_key, lat, lon):
    url = f"http://api.openweathermap.org/data/2.5/weather?lat={lat}&lon={lon}&appid={api_key}&units=metric"
    response = requests.get(url)
    return response.json()

def fetch_air_quality(api_key, lat, lon):
    url = f"http://api.openweathermap.org/data/2.5/air_pollution?lat={lat}&lon={lon}&appid={api_key}"
    response = requests.get(url)
    return response.json()

def display_weather(weather_data, air_quality_data):
    if weather_data.get("cod") != 200:
        st.error("City not found or API limit reached.")
        return
    
    city = weather_data["name"]
    country = weather_data["sys"]["country"]
    temp = weather_data["main"]["temp"]
    feels_like = weather_data["main"]["feels_like"]
    humidity = weather_data["main"]["humidity"]
    weather_description = weather_data["weather"][0]["description"].capitalize()
    icon = weather_data["weather"][0]["icon"]

    air_quality_index = air_quality_data["list"][0]["main"]["aqi"]
    air_quality = ["Good", "Fair", "Moderate", "Poor", "Very Poor"][air_quality_index - 1]

    st.markdown(f"""
        <div style="text-align: center; background: linear-gradient(135deg, #89f7fe 0%, #66a6ff 100%); padding: 20px; border-radius: 10px; color: #ffffff;">
            <h2 style="font-size: 36px;">Weather in {city}, {country}</h2>
            <img src="http://openweathermap.org/img/wn/{icon}.png" style="width: 100px;"/>
            <h3 style="font-size: 28px;">{weather_description}</h3>
            <p style="font-size: 24px;"><strong>Temperature:</strong> {temp}¬∞C</p>
            <p style="font-size: 24px;"><strong>Feels Like:</strong> {feels_like}¬∞C</p>
            <p style="font-size: 24px;"><strong>Humidity:</strong> {humidity}%</p>
            <p style="font-size: 24px;"><strong>Air Quality:</strong> {air_quality}</p>
        </div>
    """, unsafe_allow_html=True)

def weather_page():
    st.markdown("""
        <div style="text-align: center; background: linear-gradient(135deg, #89f7fe 0%, #66a6ff 100%); padding: 20px; border-radius: 10px;">
            <h1 style="color: #ffffff; font-family: 'Poppins', sans-serif; font-size: 48px;">Weather Information</h1>
        </div>
    """, unsafe_allow_html=True)

    api_key = "e3adae5cd3177f317493c05f71b7062c"  # Your OpenWeather API key

    try:
        # Try to get the user's location using GPS
        lat, lon = st.geolocation
        weather_data = fetch_weather(api_key, lat, lon)
        air_quality_data = fetch_air_quality(api_key, lat, lon)
        display_weather(weather_data, air_quality_data)
    except:
        # If GPS is not available, provide an option to enter the city name manually
        st.write("GPS location not available. Please enter your city name:")
        city_name = st.text_input("Enter city name", "")
        if st.button("Get Weather", key="weather_button"):
            if city_name:
                # Get the latitude and longitude of the city name
                geocoding_url = f"http://api.openweathermap.org/geo/1.0/direct?q={city_name}&appid={api_key}"
                geocoding_response = requests.get(geocoding_url)
                geocoding_data = geocoding_response.json()
                if geocoding_data:
                    lat = geocoding_data[0]["lat"]
                    lon = geocoding_data[0]["lon"]
                    weather_data = fetch_weather(api_key, lat, lon)
                    air_quality_data = fetch_air_quality(api_key, lat, lon)
                    display_weather(weather_data, air_quality_data)
                else:
                    st.error("City not found.")
            else:
                st.error("Please enter a city name.")

def fetch_agriculture_news(api_key):
    url = f"https://newsapi.org/v2/everything?q=agriculture+India&apiKey={api_key}"
    response = requests.get(url)
    articles = response.json().get('articles')
    return articles

# Function to display the fetched news
def display_news(articles):
    for article in articles:
        st.subheader(article['title'])
        st.write(article['description'])
        st.markdown(f"[Read more]({article['url']})")

        if article['urlToImage']:
            st.image(article['urlToImage'], use_column_width=True)
        else:
            st.write("No image available")
        
        st.write("---")

# Function for the news page focused on India
def news_page():
    st.markdown("""
        <div style="text-align: center; background: linear-gradient(135deg, #FF8008 0%, #FFC837 100%); padding: 20px; border-radius: 10px;">
            <h1 style="color: #ffffff; font-family: 'Poppins', sans-serif; font-size: 48px;">Agriculture News</h1>
        </div>
    """, unsafe_allow_html=True)

    # API key for NewsAPI
    api_key = "9d657e5a32c5441d85c4bace7fad400b"

    # Fetch and display agriculture news articles for India
    articles = fetch_agriculture_news(api_key)
    if articles:
        display_news(articles)
    else:
        st.write("Failed to fetch news articles. Please check your API key.")
        

def model_prediction(test_image):
    model = tf.keras.models.load_model("training_model.keras")
    image = tf.keras.preprocessing.image.load_img(test_image, target_size=(128, 128))
    input_arr = tf.keras.preprocessing.image.img_to_array(image)
    input_arr = np.array([input_arr])  # Convert single image to batch
    
    predictions = model.predict(input_arr)
    return predictions

def filter_class_names(prefix, class_names):
    filtered_class_names = [name for name in class_names if name.lower().startswith(prefix.lower())]
    return filtered_class_names

def get_class_name_from_predictions(predictions, filtered_class_names, class_names):
    filtered_indexes = [class_names.index(name) for name in filtered_class_names]
    max_prediction_index = np.argmax(predictions[0][filtered_indexes])
    return filtered_class_names[max_prediction_index]

class Precaution:
    def __init__(self, language="English"):
        self.language = language
        self.disease_details = {
           
    'Apple___Cedar_apple_rust': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by the fungus *Gymnosporangium juniperi-virginianae*, which requires both apple and cedar trees to complete its lifecycle.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ *‡§ú‡§ø‡§Æ‡•ç‡§®‡•ã‡§∏‡•ç‡§™‡•ã‡§∞‡•á‡§Ç‡§ú‡§ø‡§Ø‡§Æ ‡§ú‡•Å‡§®‡•Ä‡§™‡•á‡§∞‡•Ä-‡§µ‡§∞‡•ç‡§ú‡§ø‡§®‡§ø‡§Ø‡§æ‡§®‡§æ* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡•á ‡§Ö‡§™‡§®‡§æ ‡§ú‡•Ä‡§µ‡§® ‡§ö‡§ï‡•ç‡§∞ ‡§™‡•Ç‡§∞‡§æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§∏‡•á‡§¨ ‡§î‡§∞ ‡§¶‡•á‡§µ‡§¶‡§æ‡§∞ ‡§¶‡•ã‡§®‡•ã‡§Ç ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•ã‡§§‡•Ä ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Yellow-orange spots on leaves, which later develop black, cup-shaped structures.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§™‡•Ä‡§≤‡•á-‡§®‡§æ‡§∞‡§Ç‡§ó‡•Ä ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§ú‡•ã ‡§¨‡§æ‡§¶ ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§≤‡•á, ‡§ï‡§™ ‡§ï‡•á ‡§Ü‡§ï‡§æ‡§∞ ‡§ï‡•Ä ‡§∏‡§Ç‡§∞‡§ö‡§®‡§æ‡§è‡§Ç ‡§µ‡§ø‡§ï‡§∏‡§ø‡§§ ‡§ï‡§∞‡§§‡•á ‡§π‡•à‡§Ç‡•§\n"
        },
        'management': {
            "English": "Remove nearby cedar trees or galls, apply fungicides, and plant resistant apple varieties.\n",
            "Hindi": "‡§™‡§æ‡§∏ ‡§ï‡•á ‡§¶‡•á‡§µ‡§¶‡§æ‡§∞ ‡§ï‡•á ‡§™‡•á‡§°‡§º ‡§Ø‡§æ ‡§ó‡•â‡§≤‡•ç‡§∏ ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç, ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡•ã‡§ß‡•Ä ‡§∏‡•á‡§¨ ‡§ï‡•Ä ‡§ï‡§ø‡§∏‡•ç‡§Æ‡•á‡§Ç ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) in early spring. Apply 2-4 pounds per tree, depending on the age and size of the tree. Ensure that the fertilizer is spread evenly around the root zone.\n",
            "Hindi": "‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡•á‡§°‡§º ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§î‡§∞ ‡§Ü‡§ï‡§æ‡§∞ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ 2-4 ‡§™‡§æ‡§â‡§Ç‡§° ‡§™‡•ç‡§∞‡§§‡§ø ‡§™‡•á‡§°‡§º ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§ï‡§ø ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡•ã ‡§ú‡§°‡§º ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§ï‡•á ‡§ö‡§æ‡§∞‡•ã‡§Ç ‡§ì‡§∞ ‡§∏‡§Æ‡§æ‡§® ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§´‡•à‡§≤‡§æ‡§Ø‡§æ ‡§ú‡§æ‡§è‡•§\n"
        }
    },
    'Apple___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced fertilizer such as 10-10-10 (NPK) at the start of the growing season. For young trees, use about 1 pound per year of tree age, up to a maximum of 10 pounds. Spread evenly in the root zone.\n",
            "Hindi": "‡§â‡§ó‡§®‡•á ‡§ï‡•á ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•Ä ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Ø‡•Å‡§µ‡§æ ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•á‡§°‡§º ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§ï‡•á ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ ‡§≤‡§ó‡§≠‡§ó 1 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 10 ‡§™‡§æ‡§â‡§Ç‡§° ‡§§‡§ï‡•§ ‡§á‡§∏‡•á ‡§ú‡§°‡§º ‡§ï‡•ç‡§∑‡•á‡§§‡•ç‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§æ‡§® ‡§∞‡•Ç‡§™ ‡§∏‡•á ‡§´‡•à‡§≤‡§æ‡§è‡§Ç‡•§\n"
        }
    },
    'Cherry_(including_sour)___Powdery_mildew': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by the fungus *Podosphaera clandestina*, which thrives in warm, dry conditions.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ *‡§™‡•ã‡§°‡•ã‡§∏‡•ç‡§´‡•á‡§∞‡§æ ‡§ï‡•ç‡§≤‡•à‡§®‡•ç‡§°‡•á‡§∏‡•ç‡§ü‡§ø‡§®‡§æ* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡•ã ‡§ó‡§∞‡•ç‡§Æ, ‡§∏‡•Ç‡§ñ‡•á ‡§µ‡§æ‡§§‡§æ‡§µ‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§™‡§®‡§™‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "White, powdery fungal growth on leaves, shoots, and fruits.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç, ‡§∂‡•Ç‡§ü‡•ç‡§∏ ‡§î‡§∞ ‡§´‡§≤‡•ã‡§Ç ‡§™‡§∞ ‡§∏‡§´‡•á‡§¶, ‡§´‡§´‡•Ç‡§Ç‡§¶‡•Ä ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø‡•§\n"
        },
        'management': {
            "English": "Prune for better air circulation, apply fungicides, and remove and destroy infected plant parts.\n",
            "Hindi": "‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§ï‡•á ‡§≤‡§ø‡§è ‡§™‡•ç‡§∞‡•Ç‡§®‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡•å‡§ß‡•á ‡§ï‡•á ‡§π‡§ø‡§∏‡•ç‡§∏‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§î‡§∞ ‡§®‡§∑‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced fertilizer like 10-10-10 (NPK) in spring. For mature trees, apply 1-2 pounds per tree. Ensure even distribution and avoid direct contact with the trunk.\n",
            "Hindi": "‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§∞‡§ø‡§™‡§ï‡•ç‡§µ ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•ç‡§∞‡§§‡§ø ‡§™‡•á‡§°‡§º 1-2 ‡§™‡§æ‡§â‡§Ç‡§° ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§ ‡§∏‡§Æ‡§æ‡§® ‡§µ‡§ø‡§§‡§∞‡§£ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§§‡§®‡•á ‡§ï‡•á ‡§∏‡•Ä‡§ß‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç‡•§\n"
        }
    },
    'Cherry_(including_sour)___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) in early spring. For young trees, apply 0.5 to 1 pound per year of tree age, up to 5 pounds.\n",
            "Hindi": "‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Ø‡•Å‡§µ‡§æ ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•á‡§°‡§º ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ 0.5 ‡§∏‡•á 1 ‡§™‡§æ‡§â‡§Ç‡§° ‡§§‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 5 ‡§™‡§æ‡§â‡§Ç‡§° ‡§§‡§ï‡•§\n"
        }
    },
    'Corn_(maize)___Common_rust': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by the fungus *Puccinia sorghi*, spread by wind-blown spores.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ *‡§™‡•Å‡§ï‡•ç‡§∏‡§ø‡§®‡§ø‡§Ø‡§æ ‡§∏‡•ã‡§∞‡•ç‡§ò‡•Ä* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§π‡§µ‡§æ ‡§∏‡•á ‡§â‡§°‡§º‡§®‡•á ‡§µ‡§æ‡§≤‡•á ‡§∏‡•ç‡§™‡•ã‡§∞‡•ç‡§∏ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Reddish-brown pustules on both leaf surfaces, leading to leaf blighting.\n",
            "Hindi": "‡§¶‡•ã‡§®‡•ã‡§Ç ‡§™‡§§‡•ç‡§§‡•Ä ‡§∏‡§§‡§π‡•ã‡§Ç ‡§™‡§∞ ‡§≤‡§æ‡§≤-‡§≠‡•Ç‡§∞‡•á ‡§∞‡§Ç‡§ó ‡§ï‡•á ‡§™‡•Å‡§∏‡•ç‡§ü‡•Å‡§≤‡•ç‡§∏, ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡§æ ‡§Æ‡•Å‡§∞‡§ù‡§æ‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'management': {
            "English": "Use resistant corn varieties, apply fungicides if necessary, and practice crop rotation.\n",
            "Hindi": "‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡•ã‡§ß‡•Ä ‡§Æ‡§ï‡•ç‡§ï‡§æ ‡§ï‡•Ä ‡§ï‡§ø‡§∏‡•ç‡§Æ‡•á‡§Ç ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§π‡•ã‡§®‡•á ‡§™‡§∞ ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§´‡§∏‡§≤ ‡§ö‡§ï‡•ç‡§∞‡§£ ‡§ï‡§æ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a nitrogen-rich fertilizer, such as 46-0-0 (Urea). Apply 1-2 pounds per 100 square feet at the early growth stage.\n",
            "Hindi": "‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§® ‡§∏‡•á ‡§≠‡§∞‡§™‡•Ç‡§∞ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§ú‡•à‡§∏‡•á 46-0-0 (‡§Ø‡•Ç‡§∞‡§ø‡§Ø‡§æ)‡•§ ‡§∂‡•Å‡§∞‡•Å‡§Ü‡§§‡•Ä ‡§µ‡§ø‡§ï‡§æ‡§∏ ‡§ö‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§™‡•ç‡§∞‡§§‡§ø 100 ‡§µ‡§∞‡•ç‡§ó ‡§´‡•Ä‡§ü ‡§™‡§∞ 1-2 ‡§™‡§æ‡§â‡§Ç‡§° ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§\n"
        }
    },
    'Corn_(maize)___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced NPK fertilizer (20-20-20) at planting, followed by a side-dressing of nitrogen at the knee-high stage.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ NPK ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï (20-20-20) ‡§≤‡§ó‡§æ‡§è‡§Ç, ‡§á‡§∏‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§ò‡•Å‡§ü‡§®‡•á-‡§ä‡§Å‡§ö‡§æ‡§à ‡§ï‡•á ‡§ö‡§∞‡§£ ‡§Æ‡•á‡§Ç ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§® ‡§ï‡•Ä ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Grape___Esca_(Black_Measles)': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by a complex of fungi, including *Phaeomoniella chlamydospora* and *Phaeoacremonium aleophilum*.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡•ã‡§Ç ‡§ï‡•á ‡§ú‡§ü‡§ø‡§≤ ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç *‡§´‡§ø‡§Ø‡•ã‡§Æ‡•ã‡§®‡§ø‡§è‡§≤‡§æ ‡§ï‡•ç‡§≤‡•á‡§Æ‡§ø‡§°‡•ã‡§∏‡•ç‡§™‡•ã‡§∞‡§æ* ‡§î‡§∞ *‡§´‡§ø‡§Ø‡•ã‡§è‡§ï‡•ç‡§∞‡•á‡§Æ‡•ã‡§®‡§ø‡§Ø‡§Æ ‡§è‡§≤‡§ø‡§Ø‡•ã‡§´‡§ø‡§≤‡§Æ* ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§\n"
        },
        'symptoms': {
            "English": "Dark streaks in wood, leaf discoloration, and black spots on berries.\n",
            "Hindi": "‡§≤‡§ï‡§°‡§º‡•Ä ‡§Æ‡•á‡§Ç ‡§ï‡§æ‡§≤‡•á ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§™‡§§‡•ç‡§§‡•Ä ‡§ï‡§æ ‡§∞‡§Ç‡§ó ‡§¨‡§¶‡§≤‡§®‡§æ ‡§î‡§∞ ‡§¨‡•á‡§∞‡•Ä ‡§™‡§∞ ‡§ï‡§æ‡§≤‡•á ‡§ß‡§¨‡•ç‡§¨‡•á‡•§\n"
        },
        'management': {
            "English": "Prune out infected wood, avoid excessive irrigation, and apply fungicides to reduce infection.\n",
            "Hindi": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§≤‡§ï‡§°‡§º‡•Ä ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç, ‡§Ö‡§§‡•ç‡§Ø‡§ß‡§ø‡§ï ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç ‡§î‡§∞ ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§£ ‡§ï‡•ã ‡§ï‡§Æ ‡§ï‡§∞‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) in spring, and apply 1 pound per year of vine age, up to 6 pounds per vine. Mulch to retain moisture and suppress weeds.\n",
            "Hindi": "‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§¨‡•á‡§≤ ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ 1 ‡§™‡§æ‡§â‡§Ç‡§°, ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 6 ‡§™‡§æ‡§â‡§Ç‡§° ‡§™‡•ç‡§∞‡§§‡§ø ‡§¨‡•á‡§≤ ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§ ‡§®‡§Æ‡•Ä ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§î‡§∞ ‡§ñ‡§∞‡§™‡§§‡§µ‡§æ‡§∞ ‡§ï‡•ã ‡§¶‡§¨‡§æ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Æ‡§≤‡•ç‡§ö ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Grape___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply 1 pound of 10-10-10 (NPK) fertilizer per year of vine age, up to 4 pounds per vine. Fertilize in early spring before new growth begins.\n",
            "Hindi": "‡§¨‡•á‡§≤ ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ 1 ‡§™‡§æ‡§â‡§Ç‡§° 10-10-10 (NPK) ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§≤‡§ó‡§æ‡§è‡§Ç, ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 4 ‡§™‡§æ‡§â‡§Ç‡§° ‡§™‡•ç‡§∞‡§§‡§ø ‡§¨‡•á‡§≤‡•§ ‡§®‡§à ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø ‡§∂‡•Å‡§∞‡•Ç ‡§π‡•ã‡§®‡•á ‡§∏‡•á ‡§™‡§π‡§≤‡•á ‡§™‡•ç‡§∞‡§æ‡§∞‡§Ç‡§≠‡§ø‡§ï ‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•á‡§Ç ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§°‡§æ‡§≤‡•á‡§Ç‡•§\n"
        }
    },
    'Orange___Haunglongbing_(Citrus_greening)': {
        'precaution': {
            "English": "Apply insecticides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§ï‡•Ä‡§ü‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by the bacterium *Candidatus Liberibacter spp.*, spread by the Asian citrus psyllid.\n",
            "Hindi": "‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ *‡§ï‡•à‡§Ç‡§°‡§ø‡§°‡•á‡§ü‡§∏ ‡§≤‡§ø‡§¨‡•á‡§∞‡§ø‡§¨‡•à‡§ï‡•ç‡§ü‡§∞ ‡§∏‡•ç‡§™‡•Ä‡§™‡•Ä.* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§è‡§∂‡§ø‡§Ø‡§® ‡§∏‡§ø‡§ü‡•ç‡§∞‡§∏ ‡§∏‡§æ‡§á‡§≤‡§ø‡§° ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Yellowing of leaves, misshapen fruit, and overall decline in tree health.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§™‡•Ä‡§≤‡§æ ‡§π‡•ã‡§®‡§æ, ‡§´‡§≤ ‡§ï‡§æ ‡§µ‡§ø‡§ï‡•É‡§§ ‡§π‡•ã‡§®‡§æ ‡§î‡§∞ ‡§™‡•á‡§°‡§º ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§Æ‡•á‡§Ç ‡§∏‡§Æ‡§ó‡•ç‡§∞ ‡§ó‡§ø‡§∞‡§æ‡§µ‡§ü‡•§\n"
        },
        'management': {
            "English": "Control psyllid populations with insecticides, remove infected trees, and use certified disease-free planting material.\n",
            "Hindi": "‡§ï‡•Ä‡§ü‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§æ‡§á‡§≤‡§ø‡§° ‡§Ü‡§¨‡§æ‡§¶‡•Ä ‡§ï‡•ã ‡§®‡§ø‡§Ø‡§Ç‡§§‡•ç‡§∞‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§∞‡•ã‡§ó-‡§Æ‡•Å‡§ï‡•ç‡§§ ‡§™‡•å‡§ß ‡§∏‡§æ‡§Æ‡§ó‡•ç‡§∞‡•Ä ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a citrus-specific fertilizer with micronutrients, such as 6-4-6 or 8-3-9, during the growing season. Apply 1-2 pounds per tree in three equal doses throughout the year.\n",
            "Hindi": "‡§Æ‡§æ‡§á‡§ï‡•ç‡§∞‡•ã‡§®‡•ç‡§Ø‡•Ç‡§ü‡•ç‡§∞‡§ø‡§è‡§Ç‡§ü‡•ç‡§∏ ‡§ï‡•á ‡§∏‡§æ‡§• ‡§∏‡§æ‡§á‡§ü‡•ç‡§∞‡§∏-‡§µ‡§ø‡§∂‡§ø‡§∑‡•ç‡§ü ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ú‡•à‡§∏‡•á 6-4-6 ‡§Ø‡§æ 8-3-9 ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§¨‡§¢‡§º‡§§‡•á ‡§Æ‡•å‡§∏‡§Æ ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ ‡§§‡•Ä‡§® ‡§¨‡§∞‡§æ‡§¨‡§∞ ‡§ñ‡•Å‡§∞‡§æ‡§ï ‡§Æ‡•á‡§Ç 1-2 ‡§™‡§æ‡§â‡§Ç‡§° ‡§™‡•ç‡§∞‡§§‡§ø ‡§™‡•á‡§°‡§º ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§\n"
        }
    },
    'Peach___Bacterial_spot': {
        'precaution': {
            "English": "Remove infected leaves, improve air circulation, and apply bactericides to prevent further spread.\n",
            "Hindi": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç, ‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ‡§∏‡§æ‡§á‡§°‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by the bacterium *Xanthomonas campestris pv. pruni*, spread by rain and wind.\n",
            "Hindi": "‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ *‡§ú‡•à‡§®‡•ç‡§•‡•ã‡§Æ‡•ã‡§®‡§æ‡§∏ ‡§ï‡•à‡§Æ‡•ç‡§™‡•á‡§∏‡•ç‡§ü‡•ç‡§∞‡§ø‡§∏ ‡§™‡•Ä‡§µ‡•Ä ‡§™‡•ç‡§∞‡•Ç‡§®‡•Ä* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§µ‡§∞‡•ç‡§∑‡§æ ‡§î‡§∞ ‡§π‡§µ‡§æ ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Small, water-soaked spots on leaves and fruit, leading to defoliation and fruit blemishes.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§î‡§∞ ‡§´‡§≤ ‡§™‡§∞ ‡§õ‡•ã‡§ü‡•á, ‡§™‡§æ‡§®‡•Ä ‡§∏‡•á ‡§≠‡•Ä‡§ó‡•á ‡§π‡•Å‡§è ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§ù‡§°‡§º‡§®‡§æ ‡§î‡§∞ ‡§´‡§≤ ‡§ï‡•á ‡§¶‡§æ‡§ó ‡§™‡§°‡§º‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'management': {
            "English": "Apply bactericides, prune trees to improve air circulation, and select resistant varieties.\n",
            "Hindi": "‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ‡§∏‡§æ‡§á‡§°‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•Ä ‡§ï‡§ü‡§æ‡§à ‡§ï‡§∞‡•á‡§Ç ‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø‡§∞‡•ã‡§ß‡•Ä ‡§ï‡§ø‡§∏‡•ç‡§Æ‡•á‡§Ç ‡§ö‡•Å‡§®‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) in early spring. For mature trees, apply 1-2 pounds per tree. Ensure even distribution and avoid direct contact with the trunk.\n",
            "Hindi": "‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§∞‡§ø‡§™‡§ï‡•ç‡§µ ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•ç‡§∞‡§§‡§ø ‡§™‡•á‡§°‡§º 1-2 ‡§™‡§æ‡§â‡§Ç‡§° ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§ ‡§∏‡§Æ‡§æ‡§® ‡§µ‡§ø‡§§‡§∞‡§£ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§§‡§®‡•á ‡§ï‡•á ‡§∏‡•Ä‡§ß‡•á ‡§∏‡§Ç‡§™‡§∞‡•ç‡§ï ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç‡•§\n"
        }
    },
    'Peach___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced fertilizer like 10-10-10 (NPK) in early spring. For young trees, apply 1 pound per year of tree age, up to 10 pounds per tree.\n",
            "Hindi": "‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§Ø‡•Å‡§µ‡§æ ‡§™‡•á‡§°‡§º‡•ã‡§Ç ‡§ï‡•á ‡§≤‡§ø‡§è, ‡§™‡•á‡§°‡§º ‡§ï‡•Ä ‡§â‡§Æ‡•ç‡§∞ ‡§ï‡•á ‡§Ö‡§®‡•Å‡§∏‡§æ‡§∞ ‡§™‡•ç‡§∞‡§§‡§ø ‡§µ‡§∞‡•ç‡§∑ 1 ‡§™‡§æ‡§â‡§Ç‡§°, ‡§Ö‡§ß‡§ø‡§ï‡§§‡§Æ 10 ‡§™‡§æ‡§â‡§Ç‡§° ‡§™‡•ç‡§∞‡§§‡§ø ‡§™‡•á‡§°‡§º ‡§≤‡§ó‡§æ‡§è‡§Ç‡•§\n"
        }
    },
    'Pepper,_bell___Bacterial_spot': {
        'precaution': {
            "English": "Remove infected leaves, improve air circulation, and apply bactericides to prevent further spread.\n",
            "Hindi": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç, ‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ‡§∏‡§æ‡§á‡§°‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'cause': {
            "English": "Caused by several species of the bacterium *Xanthomonas*, spread by splashing water and contaminated tools.\n",
            "Hindi": "‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ *‡§ú‡•à‡§®‡•ç‡§•‡•ã‡§Æ‡•ã‡§®‡§æ‡§∏* ‡§ï‡•Ä ‡§ï‡§à ‡§™‡•ç‡§∞‡§ú‡§æ‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§™‡§æ‡§®‡•Ä ‡§ï‡•á ‡§õ‡•Ä‡§Ç‡§ü‡•á ‡§î‡§∞ ‡§¶‡•Ç‡§∑‡§ø‡§§ ‡§î‡§ú‡§æ‡§∞‡•ã‡§Ç ‡§¶‡•ç‡§µ‡§æ‡§∞‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Small, dark, water-soaked spots on leaves, stems, and fruit, often leading to defoliation.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç, ‡§§‡§®‡•ã‡§Ç ‡§î‡§∞ ‡§´‡§≤ ‡§™‡§∞ ‡§õ‡•ã‡§ü‡•á, ‡§ï‡§æ‡§≤‡•á, ‡§™‡§æ‡§®‡•Ä ‡§∏‡•á ‡§≠‡•Ä‡§ó‡•á ‡§π‡•Å‡§è ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§Ö‡§ï‡•ç‡§∏‡§∞ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§ù‡§°‡§º‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'management': {
            "English": "Practice crop rotation, avoid overhead irrigation, and use copper-based bactericides.\n",
            "Hindi": "‡§´‡§∏‡§≤ ‡§ö‡§ï‡•ç‡§∞‡§£ ‡§ï‡§æ ‡§Ö‡§≠‡•ç‡§Ø‡§æ‡§∏ ‡§ï‡§∞‡•á‡§Ç, ‡§ì‡§µ‡§∞‡§π‡•á‡§° ‡§∏‡§ø‡§Ç‡§ö‡§æ‡§à ‡§∏‡•á ‡§¨‡§ö‡•á‡§Ç ‡§î‡§∞ ‡§§‡§æ‡§Æ‡•ç‡§¨‡§æ-‡§Ü‡§ß‡§æ‡§∞‡§ø‡§§ ‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ‡§∏‡§æ‡§á‡§°‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced fertilizer like 10-10-10 (NPK) at planting, and side-dress with calcium nitrate (15.5-0-0) when fruiting begins. Use 2-3 pounds per 100 square feet.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§´‡§≤ ‡§≤‡§ó‡§®‡•á ‡§™‡§∞ ‡§ï‡•à‡§≤‡•ç‡§∂‡§ø‡§Ø‡§Æ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•á‡§ü (15.5-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡§ø 100 ‡§µ‡§∞‡•ç‡§ó ‡§´‡•Ä‡§ü 2-3 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Potato___Early_blight': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§\n"
        },
        'cause': {
            "English": "Caused by the fungus *Alternaria solani*, which thrives in warm, wet conditions.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ *‡§Ö‡§≤‡•ç‡§ü‡§∞‡§®‡§æ‡§∞‡§ø‡§Ø‡§æ ‡§∏‡•ã‡§≤‡§æ‡§®‡•Ä* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§ó‡§∞‡•ç‡§Æ, ‡§®‡§Æ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Dark brown spots with concentric rings on leaves, leading to defoliation.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§ó‡§π‡§∞‡•á ‡§≠‡•Ç‡§∞‡•á ‡§∞‡§Ç‡§ó ‡§ï‡•á ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§ù‡§°‡§º‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'management': {
            "English": "Use certified seed potatoes, rotate crops, and apply fungicides as needed.\n",
            "Hindi": "‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§Ü‡§≤‡•Ç ‡§¨‡•Ä‡§ú ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§´‡§∏‡§≤ ‡§ö‡§ï‡•ç‡§∞‡§£ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ‡§®‡•Å‡§∏‡§æ‡§∞ ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced fertilizer like 10-20-20 (NPK) at planting, and side-dress with nitrogen (34-0-0) after the plants reach 6 inches in height. Use 1.5 pounds per 100 feet of row.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø 10-20-20 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á 6 ‡§á‡§Ç‡§ö ‡§ï‡•Ä ‡§ä‡§Å‡§ö‡§æ‡§à ‡§§‡§ï ‡§™‡§π‡•Å‡§Å‡§ö‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§® (34-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§ï‡•á 100 ‡§´‡•Ä‡§ü ‡§™‡•ç‡§∞‡§§‡§ø 1.5 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Potato___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) at planting, followed by a side-dressing of nitrogen (34-0-0) after plants reach 6 inches in height. Use 2-3 pounds per 100 feet of row.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á 6 ‡§á‡§Ç‡§ö ‡§ï‡•Ä ‡§ä‡§Å‡§ö‡§æ‡§à ‡§§‡§ï ‡§™‡§π‡•Å‡§Å‡§ö‡§®‡•á ‡§ï‡•á ‡§¨‡§æ‡§¶ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•ã‡§ú‡§® (34-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§ï‡•á 100 ‡§´‡•Ä‡§ü ‡§™‡•ç‡§∞‡§§‡§ø 2-3 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Squash___Powdery_mildew': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§\n"
        },
        'cause': {
            "English": "Caused by several species of fungi, including *Podosphaera xanthii* and *Erysiphe cichoracearum*.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ ‡§ï‡•Ä ‡§ï‡§à ‡§™‡•ç‡§∞‡§ú‡§æ‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§Æ‡•á‡§Ç *‡§™‡•ã‡§°‡•ã‡§∏‡•ç‡§´‡•á‡§∞‡§æ ‡§ú‡•à‡§®‡•ç‡§•‡•Ä* ‡§î‡§∞ *‡§è‡§∞‡•Ä‡§∏‡§ø‡§´‡•á ‡§∏‡§ø‡§ï‡•ã‡§∞‡•á‡§∏‡§ø‡§Ø‡§∞‡§Æ* ‡§∂‡§æ‡§Æ‡§ø‡§≤ ‡§π‡•à‡§Ç‡•§\n"
        },
        'symptoms': {
            "English": "White, powdery fungal growth on leaves, stems, and fruit.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç, ‡§§‡§®‡•ã‡§Ç ‡§î‡§∞ ‡§´‡§≤ ‡§™‡§∞ ‡§∏‡§´‡•á‡§¶, ‡§™‡§æ‡§â‡§°‡§∞‡•Ä ‡§´‡§´‡•Ç‡§Ç‡§¶‡•Ä ‡§µ‡•É‡§¶‡•ç‡§ß‡§ø‡•§\n"
        },
        'management': {
            "English": "Apply fungicides, improve air circulation by spacing plants properly, and water plants at the base to keep leaves dry.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§¨‡•Ä‡§ö ‡§â‡§ö‡§ø‡§§ ‡§¶‡•Ç‡§∞‡•Ä ‡§∞‡§ñ‡§ï‡§∞ ‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§™‡•å‡§ß‡•ã‡§Ç ‡§ï‡•á ‡§Ü‡§ß‡§æ‡§∞ ‡§™‡§∞ ‡§™‡§æ‡§®‡•Ä ‡§¶‡•á‡§Ç ‡§§‡§æ‡§ï‡§ø ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡§æ‡§Ç ‡§∏‡•Ç‡§ñ‡•Ä ‡§∞‡§π‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Apply a balanced fertilizer like 10-10-10 (NPK) at planting, and side-dress with calcium nitrate (15.5-0-0) when flowering begins. Use 2-3 pounds per 100 square feet.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§´‡•Ç‡§≤ ‡§≤‡§ó‡§®‡•á ‡§™‡§∞ ‡§ï‡•à‡§≤‡•ç‡§∂‡§ø‡§Ø‡§Æ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•á‡§ü (15.5-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡•ç‡§∞‡§§‡§ø 100 ‡§µ‡§∞‡•ç‡§ó ‡§´‡•Ä‡§ü 2-3 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Strawberry___Leaf_scorch': {
        'precaution': {
            "English": "Remove infected leaves, improve air circulation, and apply bactericides to prevent further spread.\n",
            "Hindi": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç, ‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§Æ‡•á‡§Ç ‡§∏‡•Å‡§ß‡§æ‡§∞ ‡§ï‡§∞‡•á‡§Ç ‡§î‡§∞ ‡§¨‡•à‡§ï‡•ç‡§ü‡•Ä‡§∞‡§ø‡§Ø‡§æ‡§∏‡§æ‡§á‡§°‡•ç‡§∏ ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§\n"
        },
        'cause': {
            "English": "Caused by the fungus *Diplocarpon earlianum*, which thrives in wet, warm conditions.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ *‡§°‡§ø‡§™‡•ç‡§≤‡•ã‡§ï‡§æ‡§∞‡•ç‡§™‡•ã‡§® ‡§è‡§∞‡§≤‡§ø‡§Ø‡§®‡§Æ* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§®‡§Æ, ‡§ó‡§∞‡•ç‡§Æ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Irregular, dark purple spots on leaves, leading to leaf browning and drying.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§Ö‡§∏‡§æ‡§Æ‡§æ‡§®‡•ç‡§Ø, ‡§ó‡§π‡§∞‡•á ‡§¨‡•à‡§Ç‡§ó‡§®‡•Ä ‡§∞‡§Ç‡§ó ‡§ï‡•á ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§≠‡•Ç‡§∞‡§æ ‡§π‡•ã‡§®‡§æ ‡§î‡§∞ ‡§∏‡•Ç‡§ñ‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'management': {
            "English": "Remove and destroy infected leaves, ensure good air circulation, and apply fungicides as needed.\n",
            "Hindi": "‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç ‡§î‡§∞ ‡§®‡§∑‡•ç‡§ü ‡§ï‡§∞‡•á‡§Ç, ‡§Ö‡§ö‡•ç‡§õ‡§æ ‡§π‡§µ‡§æ ‡§ï‡•á ‡§∏‡§Ç‡§ö‡§æ‡§∞ ‡§∏‡•Å‡§®‡§ø‡§∂‡•ç‡§ö‡§ø‡§§ ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ‡§®‡•Å‡§∏‡§æ‡§∞ ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) in spring, and side-dress with ammonium nitrate (33-0-0) at mid-season. Use 2-3 pounds per 100 feet of row.\n",
            "Hindi": "‡§µ‡§∏‡§Ç‡§§ ‡§Æ‡•á‡§Ç 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§Æ‡§ß‡•ç‡§Ø-‡§∏‡•Ä‡§ú‡§® ‡§Æ‡•á‡§Ç ‡§Ö‡§Æ‡•ã‡§®‡§ø‡§Ø‡§Æ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•á‡§ü (33-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§ï‡•á 100 ‡§´‡•Ä‡§ü ‡§™‡•ç‡§∞‡§§‡§ø 2-3 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Tomato___Early_blight': {
        'precaution': {
            "English": "Apply fungicides, remove infected leaves, and maintain good orchard hygiene to prevent further spread.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§∏‡§Ç‡§ï‡•ç‡§∞‡§Æ‡§ø‡§§ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡•ã ‡§π‡§ü‡§æ ‡§¶‡•á‡§Ç, ‡§î‡§∞ ‡§Ö‡§ö‡•ç‡§õ‡•Ä ‡§¨‡§æ‡§ó‡§µ‡§æ‡§®‡•Ä ‡§∏‡•ç‡§µ‡§ö‡•ç‡§õ‡§§‡§æ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡•á‡§Ç ‡§Ü‡§ó‡•á ‡§´‡•à‡§≤‡§®‡•á ‡§∏‡•á ‡§∞‡•ã‡§ï‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è‡•§\n"
        },
        'cause': {
            "English": "Caused by the fungus *Alternaria solani*, which thrives in warm, wet conditions.\n",
            "Hindi": "‡§´‡§´‡•Ç‡§Ç‡§¶ *‡§Ö‡§≤‡•ç‡§ü‡§∞‡§®‡§æ‡§∞‡§ø‡§Ø‡§æ ‡§∏‡•ã‡§≤‡§æ‡§®‡•Ä* ‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§π‡•ã‡§§‡§æ ‡§π‡•à, ‡§ú‡§ø‡§∏‡§ï‡§æ ‡§™‡•ç‡§∞‡§∏‡§æ‡§∞ ‡§ó‡§∞‡•ç‡§Æ, ‡§®‡§Æ ‡§∏‡•ç‡§•‡§ø‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§Æ‡•á‡§Ç ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'symptoms': {
            "English": "Dark brown spots with concentric rings on leaves, leading to defoliation.\n",
            "Hindi": "‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§™‡§∞ ‡§ó‡§π‡§∞‡•á ‡§≠‡•Ç‡§∞‡•á ‡§∞‡§Ç‡§ó ‡§ï‡•á ‡§ß‡§¨‡•ç‡§¨‡•á, ‡§ú‡§ø‡§∏‡§ï‡•á ‡§ï‡§æ‡§∞‡§£ ‡§™‡§§‡•ç‡§§‡§ø‡§Ø‡•ã‡§Ç ‡§ï‡§æ ‡§ù‡§°‡§º‡§®‡§æ ‡§π‡•ã‡§§‡§æ ‡§π‡•à‡•§\n"
        },
        'management': {
            "English": "Use certified seeds, rotate crops, and apply fungicides during wet weather.\n",
            "Hindi": "‡§™‡•ç‡§∞‡§Æ‡§æ‡§£‡§ø‡§§ ‡§¨‡•Ä‡§ú ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§´‡§∏‡§≤ ‡§ö‡§ï‡•ç‡§∞‡§£ ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§®‡§Æ ‡§Æ‡•å‡§∏‡§Æ ‡§Æ‡•á‡§Ç ‡§´‡§´‡•Ç‡§Ç‡§¶‡§®‡§æ‡§∂‡§ï‡•ã‡§Ç ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) at planting, and side-dress with calcium nitrate (15.5-0-0) when fruiting begins. Apply 2-3 pounds per 100 feet of row.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§´‡§≤ ‡§≤‡§ó‡§®‡•á ‡§™‡§∞ ‡§ï‡•à‡§≤‡•ç‡§∂‡§ø‡§Ø‡§Æ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•á‡§ü (15.5-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§ï‡•á 100 ‡§´‡•Ä‡§ü ‡§™‡§∞ 2-3 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    },
    'Tomato___healthy': {
        'precaution': {
            "English": "No precautions needed, the plant is healthy.\n",
            "Hindi": "‡§ï‡•ã‡§à ‡§∏‡§æ‡§µ‡§ß‡§æ‡§®‡•Ä ‡§ï‡•Ä ‡§Ü‡§µ‡§∂‡•ç‡§Ø‡§ï‡§§‡§æ ‡§®‡§π‡•Ä‡§Ç ‡§π‡•à, ‡§™‡•å‡§ß‡§æ ‡§∏‡•ç‡§µ‡§∏‡•ç‡§• ‡§π‡•à‡•§\n"
        },
        'cause': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'symptoms': {
            "English": "N/A\n",
            "Hindi": "‡§è‡§®/‡§è\n"
        },
        'management': {
            "English": "Continue regular care to maintain plant health.\n",
            "Hindi": "‡§™‡•å‡§ß‡•á ‡§ï‡•Ä ‡§∏‡•á‡§π‡§§ ‡§¨‡§®‡§æ‡§è ‡§∞‡§ñ‡§®‡•á ‡§ï‡•á ‡§≤‡§ø‡§è ‡§®‡§ø‡§Ø‡§Æ‡§ø‡§§ ‡§¶‡•á‡§ñ‡§≠‡§æ‡§≤ ‡§ú‡§æ‡§∞‡•Ä ‡§∞‡§ñ‡•á‡§Ç‡•§\n"
        },
        'fertilizer': {
            "English": "Use a balanced fertilizer like 10-10-10 (NPK) at planting, and side-dress with calcium nitrate (15.5-0-0) during the fruiting stage. Apply 2-3 pounds per 100 feet of row.\n",
            "Hindi": "‡§∞‡•ã‡§™‡§£ ‡§ï‡•á ‡§∏‡§Æ‡§Ø 10-10-10 (NPK) ‡§ú‡•à‡§∏‡•á ‡§∏‡§Ç‡§§‡•Å‡§≤‡§ø‡§§ ‡§â‡§∞‡•ç‡§µ‡§∞‡§ï ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç, ‡§î‡§∞ ‡§´‡§≤ ‡§≤‡§ó‡§®‡•á ‡§ï‡•á ‡§¶‡•å‡§∞‡§æ‡§® ‡§ï‡•à‡§≤‡•ç‡§∂‡§ø‡§Ø‡§Æ ‡§®‡§æ‡§á‡§ü‡•ç‡§∞‡•á‡§ü (15.5-0-0) ‡§∏‡•á ‡§∏‡§æ‡§á‡§°-‡§°‡•ç‡§∞‡•á‡§∏‡§ø‡§Ç‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§ ‡§™‡§Ç‡§ï‡•ç‡§§‡§ø ‡§ï‡•á 100 ‡§´‡•Ä‡§ü ‡§™‡§∞ 2-3 ‡§™‡§æ‡§â‡§Ç‡§° ‡§ï‡§æ ‡§â‡§™‡§Ø‡•ã‡§ó ‡§ï‡§∞‡•á‡§Ç‡•§\n"
        }
    }
}


    def get_precaution(self, class_name):
        disease_info = self.disease_details.get(class_name)
        if disease_info:
            return (
                f"**{translations[self.language]['precaution']}:** {disease_info['precaution'][self.language]}\n"
                f"**{translations[self.language]['cause']}:** {disease_info['cause'][self.language]}\n"
                f"**{translations[self.language]['symptoms']}:** {disease_info['symptoms'][self.language]}\n"
                f"**{translations[self.language]['management']}:** {disease_info['management'][self.language]}\n"
                f"**{translations[self.language]['fertilizer']}:** {disease_info['fertilizer'][self.language]}\n"
            )
        else:
            return "No specific precautions available for this disease."

def display_prediction(class_name, language):
    precaution = Precaution(language=language)
    st.success(f"üåø Model predicts: **{class_name}**")
    precautions = precaution.get_precaution(class_name)
    st.warning(f"{precautions}")



def soil_classification_page():
    st.markdown(""" <div style="text-align: center; background: linear-gradient(135deg, #f093fb 0%, #f5576c 100%); padding: 20px; border-radius: 10px;"> <h1 style="color: #ffffff; font-family: 'Poppins', sans-serif; font-size: 48px;">Soil Classification and Crop Recommendation</h1> </div> """, unsafe_allow_html=True)

    st.write("Upload an image of soil, and the system will classify it and recommend the best crops to grow.")

    soil_image = st.file_uploader("Upload Soil Image", type=["jpg", "jpeg", "png"])

    if soil_image:
        st.image(soil_image, caption="Uploaded Soil Image", use_column_width=True, clamp=True)

        # Add a "Predict" button
        predict_button = st.button("Predict")

        if predict_button:
            model = tf.keras.models.load_model("keras_model.h5")

            # Process the uploaded image for prediction
            image = tf.keras.preprocessing.image.load_img(soil_image, target_size=(224, 224))
            input_arr = tf.keras.preprocessing.image.img_to_array(image)
            input_arr = np.array([input_arr]) / 255.0  # Normalize
            prediction = model.predict(input_arr)

            # Define the soil classes and associated crop recommendations
            soil_classes = {
                0: "Yellow Soil",
                1: "Peat Soil",
                2: "Laterite Soil",
                3: "Cinder Soil",
                4: "Black Soil"
            }

            crop_recommendations = {
                "Yellow Soil": {
        "Best Crops": ["Cotton", "Wheat"],
        "Fertilizer": "Apply NPK 12-32-16 fertilizer at 100 kg/ha.",
        "Cost Estimator (Fertilizer)": "‚Çπ5,000 - ‚Çπ7,000 per ha",
        "Cost Estimator (Crop)": "‚Çπ15,000 - ‚Çπ20,000 per ha",
        "Suitable City": "Ahmedabad, Gujarat",
        "Government Scheme (MSP)": "‚Çπ4,500 per quintal (Cotton), ‚Çπ2,500 per quintal (Wheat)",
        "Supported Tractors": "Mahindra, John Deere"
    },
    "Peat Soil": {
        "Best Crops": ["Rice", "Sugarcane"],
        "Fertilizer": "Use organic compost and NPK 10-26-26 fertilizer.",
        "Cost Estimator (Fertilizer)": "‚Çπ3,000 - ‚Çπ5,000 per ha",
        "Cost Estimator (Crop)": "‚Çπ25,000 - ‚Çπ35,000 per ha",
        "Suitable City": "Kolkata, West Bengal",
        "Government Scheme (MSP)": "‚Çπ2,500 per quintal (Rice), ‚Çπ3,500 per quintal (Sugarcane)",
        "Supported Tractors": "Sonalika, New Holland"
    },
    "Laterite Soil": {
        "Best Crops": ["Coconut", "Tea"],
        "Fertilizer": "Apply potassium-rich fertilizers like K2O.",
        "Cost Estimator (Fertilizer)": "‚Çπ4,000 - ‚Çπ6,000 per ha",
        "Cost Estimator (Crop)": "‚Çπ30,000 - ‚Çπ40,000 per ha",
        "Suitable City": "Kochi, Kerala",
        "Government Scheme (MSP)": "‚Çπ1,500 per quintal (Coconut), ‚Çπ2,000 per quintal (Tea)",
        "Supported Tractors": "Escorts, Swaraj"
    },
    "Cinder Soil": {
        "Best Crops": ["Millet", "Maize"],
        "Fertilizer": "Use balanced NPK 15-15-15 fertilizer.",
        "Cost Estimator (Fertilizer)": "‚Çπ2,500 - ‚Çπ4,000 per ha",
        "Cost Estimator (Crop)": "‚Çπ10,000 - ‚Çπ15,000 per ha",
        "Suitable City": "Hyderabad, Telangana",
        "Government Scheme (MSP)": "‚Çπ2,000 per quintal (Millet), ‚Çπ1,800 per quintal (Maize)",
        "Supported Tractors": "Mahindra, John Deere"
    },
    "Black Soil": {
        "Best Crops": ["Cotton", "Soybean"],
        "Fertilizer": "Apply NPK 20-10-10 fertilizer at 50 kg/ha.",
        "Cost Estimator (Fertilizer)": "‚Çπ4,500 - ‚Çπ6,500 per ha",
        "Cost Estimator (Crop)": "‚Çπ18,000 - ‚Çπ25,000 per ha",
        "Suitable City": "Nagpur, Maharashtra",
        "Government Scheme (MSP)": "‚Çπ4,500 per quintal (Cotton), ‚Çπ3,500 per quintal (Soybean)",
        "Supported Tractors": "Sonalika, New Holland"
    }
          }

            predicted_class = np.argmax(prediction)
            soil_type = soil_classes[predicted_class]

            # Display results in a table format
            st.write("<div style='background-color: #000001; padding: 5px; border-radius: 10px;'>## Soil Classification and Crop Recommendation</div>", unsafe_allow_html=True)
            st.write("<div style='background-color: #000001; padding: 5px; border-radius: 10px;'>### Soil Type: **{}**</div>".format(soil_type), unsafe_allow_html=True)
            st.write("<div style='background-color: #000001; padding: 5px; border-radius: 10px;'>### Recommendations:</div>", unsafe_allow_html=True)
            st.markdown("""
<style>
table {{
    border-collapse: collapse;
    width: 100%;
    background-color: #f7f7f7;
}}
th, td {{
    border: 1px solid #ddd;
    padding: 10px;
    text-align: left;
    color: #333;
    background-color: #f7f7f7;
}}
th {{
    background-color: #f0f0f0;
}}
</style>
<table>
<tr>
    <th>Category</th>
    <th>Recommendation</th>
</tr>
<tr>
    <td><b>Best Crops</b></td>
    <td>{0}</td>
</tr>
<tr>
    <td><b>Fertilizer</b></td>
    <td>{1}</td>
</tr>
<tr>
    <td><b>Cost Estimator (Fertilizer)</b></td>
    <td>{2}</td>
</tr>
<tr>
    <td><b>Cost Estimator (Crop)</b></td>
    <td>{3}</td>
</tr>
<tr>
    <td><b>Suitable City</b></td>
    <td>{4}</td>
</tr>
<tr>
    <td><b>Government Scheme (MSP)</b></td>
    <td>{5}</td>
</tr>
<tr>
    <td><b>Supported Tractors</b></td>
    <td>{6}</td>
</tr>
</table>
""".format(
    ', '.join(crop_recommendations[soil_type]['Best Crops']),
    crop_recommendations[soil_type]['Fertilizer'],
    crop_recommendations[soil_type]['Cost Estimator (Fertilizer)'],
    crop_recommendations[soil_type]['Cost Estimator (Crop)'],
    crop_recommendations[soil_type]['Suitable City'],
    crop_recommendations[soil_type]['Government Scheme (MSP)'],
    crop_recommendations[soil_type]['Supported Tractors']
), unsafe_allow_html=True)
            
if "language" not in st.session_state:
    st.session_state.language = "English"

# Sidebar for language selection
st.sidebar.title("üå± CropPro Assist")
language_selection = st.sidebar.selectbox("Language", options=["English", "Hindi"], index=0 if st.session_state.language == "English" else 1)
st.session_state.language = language_selection


st.markdown("""
    <style>
         /* Google Fonts */
        @import url('https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;600&display=swap');

        body {
            font-family: 'Poppins', sans-serif;
            background: linear-gradient(135deg, #e0eafc 0%, #cfdef3 100%);
            color: #333;
        }

        /* Sidebar styling */
        .css-18e3th9 {
            background-color: #2e7d32 !important;
            color: white;
        }

        /* Header and text styles */
        h1, h3, h4, p, li, .stButton > button {
            font-family: 'Poppins', sans-serif;
        }

        /* Header custom styling */
        h1 {
            font-size: 3rem;
            color: #ffffff;
            text-align: center;
            background: linear-gradient(to right, #0072ff, #00c6ff);
            padding: 10px 20px;
            border-radius: 10px;
            margin-bottom: 20px;
        }

        /* Card layout */
        .card {
            background: rgba(255, 255, 255, 0.85);
            color: #333;
            border-radius: 10px;
            box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2);
            transition: 0.3s;
            padding: 20px;
            margin-bottom: 20px;
        }
        .card:hover {
            box-shadow: 0 8px 16px 0 rgba(0, 0, 0, 0.2);
        }

        /* Button hover effect */
        .stButton > button {
            background-color: #0072ff;
            color: white;
            border-radius: 8px;
            padding: 10px 20px;
            transition: background-color 0.3s, transform 0.3s;
        }

        .stButton > button:hover {
            background-color: #0056b3;
            transform: scale(1.05);
        }

        /* Info and warning boxes styling */
        .st-info-box {
            background-color: #e1f5fe !important;
            color: #333;
        }

        .st-warning-box {
            background-color: #ffebee !important;  /* Lighter background */
            color: #b71c1c !important;  /* Darker text color */
        }

        /* Center align text in the main section */
        .css-1d391kg {
            text-align: center;
        }

        /* List styles */
        ul {
            list-style-type: none;
            padding-left: 0;
        }
        ul li {
            margin-bottom: 10px;
        }
        ul li:before {
            content: '‚úîÔ∏è';
            margin-right: 10px;
            color: #00c6ff;
        }

        /* Tooltip styling */
        .tooltip {
            position: relative;
            display: inline-block;
            cursor: pointer;
        }

        .tooltip .tooltiptext {
            visibility: hidden;
            width: 200px;
            background-color: #333;
            color: #fff;
            text-align: center;
            border-radius: 5px;
            padding: 5px 0;
            position: absolute;
            z-index: 1;
            bottom: 125%;
            left: 50%;
            margin-left: -100px;
            opacity: 0;
            transition: opacity 0.3s;
        }

        .tooltip:hover .tooltiptext {
            visibility: visible;
            opacity: 1;
        }
    </style>
""", unsafe_allow_html=True)

# Main content based on user selection
st.sidebar.title("Navigation")
app_mode = st.sidebar.selectbox("Choose a page", [
    "Home",
    "Disease Recognition",
    "Webcam live feed",
    "Soil Classification",
    "Weather",
    "Agriculture News",
    "Disease Library",
    "Contact Bot"
])

if app_mode == "Home":
    st.markdown(f"<h1>{translations[st.session_state.language]['title']}</h1>", unsafe_allow_html=True)
    st.markdown(f"<div class='card'><h3>{translations[st.session_state.language]['welcome']}</h3>"
                f"<p>{translations[st.session_state.language]['mission']}</p>"
                f"<h4>{translations[st.session_state.language]['how_it_works']}</h4>"
                f"<ul><li><strong>{translations[st.session_state.language]['upload_image']}</strong> {translations[st.session_state.language]['disease_recognition']}</li>"
                f"<li><strong>{translations[st.session_state.language]['analysis']}</strong> Our system will process the image using advanced algorithms to identify potential diseases.</li>"
                f"<li><strong>{translations[st.session_state.language]['results']}</strong> View the results and recommendations for further action.</li></ul></div>",
                unsafe_allow_html=True)

elif app_mode == "Disease Recognition":
    st.markdown(f"<h1>{translations[st.session_state.language]['title']}</h1>", unsafe_allow_html=True)
    st.markdown(f"<p>{translations[st.session_state.language]['upload_prompt']}</p>", unsafe_allow_html=True)
    
    plant_prefix = st.text_input(translations[st.session_state.language]["enter_plant_name"])
    test_image = st.file_uploader(translations[st.session_state.language]["choose_image"])
    
    if test_image:
        st.image(test_image, caption="Uploaded Image", use_column_width=True, clamp=True)
        if st.button(translations[st.session_state.language]["predict"]):
            with st.spinner(translations[st.session_state.language]["analyzing_image"]):
                predictions = model_prediction(test_image)

                class_names = [
                    'Apple___Cedar_apple_rust', 'Apple___healthy', 'Cherry_(including_sour)___Powdery_mildew',
                    'Cherry_(including_sour)___healthy', 'Corn_(maize)___Common_rust_', 'Corn_(maize)___healthy',
                    'Grape___Esca_(Black_Measles)', 'Grape___healthy', 'Orange___Haunglongbing_(Citrus_greening)',
                    'Peach___Bacterial_spot',  'Pepper,_bell___Bacterial_spot',
                    'Potato___Early_blight', 
                    'Squash___Powdery_mildew', 'Strawberry___Leaf_scorch',
                    'Tomato___Early_blight'
                ]
                
                filtered_class_names = filter_class_names(plant_prefix, class_names)
                if filtered_class_names:
                    class_name = get_class_name_from_predictions(predictions, filtered_class_names, class_names)
                    display_prediction(class_name, language=st.session_state.language)
                else:
                    st.warning(translations[st.session_state.language]["no_classes_match"])
    else:
        st.warning(translations[st.session_state.language]["please_upload_image"])

elif app_mode == "Soil Classification":
    soil_classification_page()

elif app_mode == "Weather":
    weather_page()

elif app_mode == "Agriculture News":
    news_page()

elif app_mode == "Disease Library":
    st.markdown(f"<h1>{translations[st.session_state.language]['disease_library']}</h1>", unsafe_allow_html=True)
    st.markdown(f"<div class='card'><h4>{translations[st.session_state.language]['browse_library']}</h4>"
                f"<p>{translations[st.session_state.language]['select_disease']}</p></div>", unsafe_allow_html=True)
    
    disease_list = list(Precaution(language=st.session_state.language).disease_details.keys())
    disease_selection = st.selectbox(translations[st.session_state.language]["select_disease"], disease_list)
    
    precaution = Precaution(language=st.session_state.language)
    st.info(precaution.get_precaution(disease_selection))

elif app_mode == "Contact Bot":
    st.markdown(f"<h1>{translations[st.session_state.language]['contact_bot']}</h1>", unsafe_allow_html=True)
    st.markdown(f"<p>{translations[st.session_state.language]['chat_with_bot']}</p>", unsafe_allow_html=True)
    
    st.markdown(
        """
        <div style="display: flex; justify-content: center; align-items: center; height: 70vh;">
            <iframe 
                src="https://cdn.botpress.cloud/webchat/v2.1/shareable.html?botId=f30e8203-66c5-4e87-a73d-d2e4799b1235"
                style="border: none; width: 400px; height: 500px;">
            </iframe>
        </div>
        """,
        unsafe_allow_html=True,
    )
elif app_mode =="Webcam live feed":
    st.markdown(f"<h1>{translations[st.session_state.language]['webcam_live_feed']}</h1>", unsafe_allow_html=True)
    st.markdown(f"<p>{translations[st.session_state.language]['take_photo']}</p>", unsafe_allow_html=True)
    
    plant_prefix = st.text_input(translations[st.session_state.language]["enter_plant_name"])
    run = st.checkbox(translations[st.session_state.language]["run"])
    
    if run:
        img_file_buffer = st.camera_input(translations[st.session_state.language]["take_photo"])
        
        if img_file_buffer:
            st.image(img_file_buffer)
            if st.button(translations[st.session_state.language]["predict"]):
                with st.spinner(translations[st.session_state.language]["analyzing_image"]):
                    predictions = model_prediction(img_file_buffer)

                    class_names = [
                        'Apple___Cedar_apple_rust', 'Apple___healthy', 'Cherry_(including_sour)___Powdery_mildew',
                        'Cherry_(including_sour)___healthy', 'Corn_(maize)___Common_rust_', 'Corn_(maize)___healthy',
                        'Grape___Esca_(Black_Measles)', 'Grape___healthy', 'Orange___Haunglongbing_(Citrus_greening)',
                        'Peach___Bacterial_spot',  'Pepper,_bell___Bacterial_spot',
                        'Potato___Early_blight', 
                        'Squash___Powdery_mildew', 'Strawberry___Leaf_scorch',
                        'Tomato___Early_blight'
                    ]
                    
                    filtered_class_names = filter_class_names(plant_prefix, class_names)
                    if filtered_class_names:
                        class_name = get_class_name_from_predictions(predictions, filtered_class_names, class_names)
                        display_prediction(class_name, language=st.session_state.language)
                    else:
                        st.warning(translations[st.session_state.language]["no_classes_match"])
